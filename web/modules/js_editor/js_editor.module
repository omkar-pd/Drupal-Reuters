<?php

/**
 * @file
 * Allows users to apply customized JS to themes.
 */

use Drupal\Core\File\FileSystemInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\StreamWrapper\PublicStream;

/**
 * Implements hook_help().
 */
function js_editor_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the JS Editor module.
    case 'help.page.js_editor':
      $output = '';
      $output .= '<h3>' . t('About Javascript Editor') . '</h3>';
      $output .= '<p>' . t("This module allows administrators to customize a theme's Javascript through the browser, using a rich text editor with syntax highlighting.") . '</p>';
      $output .= '<p>' . t('On the settings page of each theme it will be displayed a textarea where the admin can type custom Javascript code.') . '</p>';
      $output .= '<p>' . t('The feature can be enabled to multiple themes on the same site.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_library_info_alter().
 */
function js_editor_library_info_alter(&$libraries, $extension) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  if ($extension == $theme) {
    if ($file = _js_editor_get_javascript($theme)) {
      // Append custom style sheet to theme libraries.
      $libraries['js_editor']['js'][$file]['type'] = 'external';
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function js_editor_page_attachments(array &$page) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  if (_js_editor_get_javascript($theme)) {
    $page['#attached']['library'][] = $theme . '/js_editor';
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for `system_theme_settings`.
 */
function js_editor_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $theme = _js_editor_get_edited_theme($form_state);
  if ($theme) {
    $config = \Drupal::configFactory()->getEditable('js_editor.theme.' . $theme);
    $js_editor_permission = \Drupal::currentUser()->hasPermission('execute arbitrary js_editor scripts');

    // Add JS customization fieldset.
    $form['js_editor'] = [
      '#type' => 'details',
      '#title' => t('Custom Javascript'),
      '#open' => TRUE,
      '#access' => $js_editor_permission,
    ];
    // Switch to enable/disable customization.
    $form['js_editor']['js_enabled'] = [
      '#title' => t('Enable or disable custom Javascript:'),
      '#type' => 'checkbox',
      '#default_value' => $config->get('enabled'),
      '#access' => $js_editor_permission,
    ];
    // Editor box.
    $form['js_editor']['js'] = [
      '#type' => 'textarea',
      '#prefix' => '<div id="js-editor-field">',
      '#description' => t('Type or paste custom Javascript code for this theme.'),
      '#default_value' => $config->get('js'),
      '#attributes' => ['id' => 'js-editor-textarea'],
      '#suffix' => '</div>',
      '#access' => $js_editor_permission,
    ];
    // Attach submit callback.
    $form['#submit'][] = '_js_editor_theme_settings_form_submit';
  }
}

/**
 * Form submission handler for hook_form_system_theme_settings_alter().
 */
function _js_editor_theme_settings_form_submit($form, FormStateInterface $form_state) {
  $theme = _js_editor_get_edited_theme($form_state);
  if ($theme) {
    // Save file.
    $path = PublicStream::basePath() . DIRECTORY_SEPARATOR . 'js_editor';
    $file = $path . DIRECTORY_SEPARATOR . $theme . '.js';
    if (\Drupal::service('file_system')->prepareDirectory($path, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS)) {
      \Drupal::service('file_system')->saveData($form_state->getValue('js'), $file, FileSystemInterface::EXISTS_REPLACE);
      \Drupal::service('file_system')->chmod($file);
    }

    // Save settings.
    \Drupal::configFactory()->getEditable('js_editor.theme.' . $theme)
      ->set('enabled', $form_state->getValue('js_enabled'))
      ->set('js', $form_state->getValue('js'))
      ->set('path', $file)
      ->save();
    // Clear cache.
    drupal_flush_all_caches();
  }
}

/**
 * Form helper.
 */
function _js_editor_get_edited_theme(FormStateInterface $form_state) {
  // Return theme being currently edited.
  $build_info = $form_state->getBuildInfo();
  return isset($build_info['args'][0]) ? $build_info['args'][0] : FALSE;
}

/**
 * Get the Custom JS generated file for a theme.
 *
 * @param string $theme
 *   The machine name of the current theme.
 *
 * @return string|bool
 *   Return the filepath or FALSE
 */
function _js_editor_get_javascript($theme) {
  $config = \Drupal::configFactory()->getEditable('js_editor.theme.' . $theme);
  $file = $config->get('path');
  if ($config->get('enabled') && file_exists($file)) {
    return '/' . $file;
  }
  else {
    return FALSE;
  }
}
